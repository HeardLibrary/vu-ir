import { NgModule } from '@angular/core';
import { MatomoOptOutFormComponent } from './directives/matomo-opt-out-form.component';
import { MatomoTrackClickDirective } from './directives/matomo-track-click.directive';
import { MatomoTrackerDirective } from './directives/matomo-tracker.directive';
import { provideMatomo, withScriptFactory } from './providers';
import * as i0 from "@angular/core";
export const MATOMO_DIRECTIVES = [
    MatomoTrackerDirective,
    MatomoTrackClickDirective,
    MatomoOptOutFormComponent,
];
function buildProviders(config, scriptFactory) {
    const features = [];
    if (scriptFactory) {
        features.push(withScriptFactory(scriptFactory));
    }
    return provideMatomo(config, ...features);
}
export class MatomoModule {
    static forRoot(config, scriptFactory) {
        return {
            ngModule: MatomoModule,
            providers: [buildProviders(config, scriptFactory)],
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: MatomoModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.2", ngImport: i0, type: MatomoModule, imports: [MatomoTrackerDirective,
            MatomoTrackClickDirective,
            MatomoOptOutFormComponent], exports: [MatomoTrackerDirective,
            MatomoTrackClickDirective,
            MatomoOptOutFormComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: MatomoModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: MatomoModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [...MATOMO_DIRECTIVES],
                    exports: [...MATOMO_DIRECTIVES],
                }]
        }] });
/**
 * @deprecated use MatomoModule instead
 * @breaking-change 7.0.0
 */
export class NgxMatomoModule {
    static forRoot(config, scriptFactory) {
        return {
            ngModule: NgxMatomoModule,
            providers: [buildProviders(config, scriptFactory)],
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: NgxMatomoModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.2", ngImport: i0, type: NgxMatomoModule, imports: [MatomoModule], exports: [MatomoModule] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: NgxMatomoModule, imports: [MatomoModule, MatomoModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: NgxMatomoModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [MatomoModule],
                    exports: [MatomoModule],
                }]
        }] });
/**
 * @deprecated use MatomoModule instead
 * @breaking-change 7.0.0
 */
export class NgxMatomoTrackerModule {
    static forRoot(config, scriptFactory) {
        return {
            ngModule: NgxMatomoTrackerModule,
            providers: [buildProviders(config, scriptFactory)],
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: NgxMatomoTrackerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.2", ngImport: i0, type: NgxMatomoTrackerModule, imports: [NgxMatomoModule], exports: [NgxMatomoModule] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: NgxMatomoTrackerModule, imports: [NgxMatomoModule, NgxMatomoModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: NgxMatomoTrackerModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [NgxMatomoModule],
                    exports: [NgxMatomoModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0b21vLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1tYXRvbW8tY2xpZW50L2NvcmUvbWF0b21vLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQTZDLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUN2RixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUN0RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMvRSxPQUFPLEVBQWlCLGFBQWEsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGFBQWEsQ0FBQzs7QUFJOUUsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUc7SUFDL0Isc0JBQXNCO0lBQ3RCLHlCQUF5QjtJQUN6Qix5QkFBeUI7Q0FDakIsQ0FBQztBQUVYLFNBQVMsY0FBYyxDQUNyQixNQUEyQixFQUMzQixhQUFtQztJQUVuQyxNQUFNLFFBQVEsR0FBb0IsRUFBRSxDQUFDO0lBRXJDLElBQUksYUFBYSxFQUFFO1FBQ2pCLFFBQVEsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztLQUNqRDtJQUVELE9BQU8sYUFBYSxDQUFDLE1BQU0sRUFBRSxHQUFHLFFBQVEsQ0FBQyxDQUFDO0FBQzVDLENBQUM7QUFNRCxNQUFNLE9BQU8sWUFBWTtJQUN2QixNQUFNLENBQUMsT0FBTyxDQUNaLE1BQTJCLEVBQzNCLGFBQW1DO1FBRW5DLE9BQU87WUFDTCxRQUFRLEVBQUUsWUFBWTtZQUN0QixTQUFTLEVBQUUsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1NBQ25ELENBQUM7SUFDSixDQUFDOzhHQVRVLFlBQVk7K0dBQVosWUFBWSxZQXRCdkIsc0JBQXNCO1lBQ3RCLHlCQUF5QjtZQUN6Qix5QkFBeUIsYUFGekIsc0JBQXNCO1lBQ3RCLHlCQUF5QjtZQUN6Qix5QkFBeUI7K0dBb0JkLFlBQVk7OzJGQUFaLFlBQVk7a0JBSnhCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUMsR0FBRyxpQkFBaUIsQ0FBQztvQkFDL0IsT0FBTyxFQUFFLENBQUMsR0FBRyxpQkFBaUIsQ0FBQztpQkFDaEM7O0FBYUQ7OztHQUdHO0FBS0gsTUFBTSxPQUFPLGVBQWU7SUFDMUIsTUFBTSxDQUFDLE9BQU8sQ0FDWixNQUEyQixFQUMzQixhQUFtQztRQUVuQyxPQUFPO1lBQ0wsUUFBUSxFQUFFLGVBQWU7WUFDekIsU0FBUyxFQUFFLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsQ0FBQztTQUNuRCxDQUFDO0lBQ0osQ0FBQzs4R0FUVSxlQUFlOytHQUFmLGVBQWUsWUFwQmYsWUFBWSxhQUFaLFlBQVk7K0dBb0JaLGVBQWUsWUFIaEIsWUFBWSxFQWpCWCxZQUFZOzsyRkFvQlosZUFBZTtrQkFKM0IsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7b0JBQ3ZCLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztpQkFDeEI7O0FBYUQ7OztHQUdHO0FBS0gsTUFBTSxPQUFPLHNCQUFzQjtJQUNqQyxNQUFNLENBQUMsT0FBTyxDQUNaLE1BQTJCLEVBQzNCLGFBQW1DO1FBRW5DLE9BQU87WUFDTCxRQUFRLEVBQUUsc0JBQXNCO1lBQ2hDLFNBQVMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsYUFBYSxDQUFDLENBQUM7U0FDbkQsQ0FBQztJQUNKLENBQUM7OEdBVFUsc0JBQXNCOytHQUF0QixzQkFBc0IsWUFwQnRCLGVBQWUsYUFBZixlQUFlOytHQW9CZixzQkFBc0IsWUFIdkIsZUFBZSxFQWpCZCxlQUFlOzsyRkFvQmYsc0JBQXNCO2tCQUpsQyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLGVBQWUsQ0FBQztvQkFDMUIsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDO2lCQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudmlyb25tZW50UHJvdmlkZXJzLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0b21vT3B0T3V0Rm9ybUNvbXBvbmVudCB9IGZyb20gJy4vZGlyZWN0aXZlcy9tYXRvbW8tb3B0LW91dC1mb3JtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNYXRvbW9UcmFja0NsaWNrRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL21hdG9tby10cmFjay1jbGljay5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWF0b21vVHJhY2tlckRpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9tYXRvbW8tdHJhY2tlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWF0b21vRmVhdHVyZSwgcHJvdmlkZU1hdG9tbywgd2l0aFNjcmlwdEZhY3RvcnkgfSBmcm9tICcuL3Byb3ZpZGVycyc7XG5pbXBvcnQgeyBNYXRvbW9Db25maWd1cmF0aW9uIH0gZnJvbSAnLi90cmFja2VyL2NvbmZpZ3VyYXRpb24nO1xuaW1wb3J0IHsgTWF0b21vU2NyaXB0RmFjdG9yeSB9IGZyb20gJy4vdHJhY2tlci9zY3JpcHQtZmFjdG9yeSc7XG5cbmV4cG9ydCBjb25zdCBNQVRPTU9fRElSRUNUSVZFUyA9IFtcbiAgTWF0b21vVHJhY2tlckRpcmVjdGl2ZSxcbiAgTWF0b21vVHJhY2tDbGlja0RpcmVjdGl2ZSxcbiAgTWF0b21vT3B0T3V0Rm9ybUNvbXBvbmVudCxcbl0gYXMgY29uc3Q7XG5cbmZ1bmN0aW9uIGJ1aWxkUHJvdmlkZXJzKFxuICBjb25maWc6IE1hdG9tb0NvbmZpZ3VyYXRpb24sXG4gIHNjcmlwdEZhY3Rvcnk/OiBNYXRvbW9TY3JpcHRGYWN0b3J5LFxuKTogRW52aXJvbm1lbnRQcm92aWRlcnMge1xuICBjb25zdCBmZWF0dXJlczogTWF0b21vRmVhdHVyZVtdID0gW107XG5cbiAgaWYgKHNjcmlwdEZhY3RvcnkpIHtcbiAgICBmZWF0dXJlcy5wdXNoKHdpdGhTY3JpcHRGYWN0b3J5KHNjcmlwdEZhY3RvcnkpKTtcbiAgfVxuXG4gIHJldHVybiBwcm92aWRlTWF0b21vKGNvbmZpZywgLi4uZmVhdHVyZXMpO1xufVxuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbLi4uTUFUT01PX0RJUkVDVElWRVNdLFxuICBleHBvcnRzOiBbLi4uTUFUT01PX0RJUkVDVElWRVNdLFxufSlcbmV4cG9ydCBjbGFzcyBNYXRvbW9Nb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChcbiAgICBjb25maWc6IE1hdG9tb0NvbmZpZ3VyYXRpb24sXG4gICAgc2NyaXB0RmFjdG9yeT86IE1hdG9tb1NjcmlwdEZhY3RvcnksXG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TWF0b21vTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBNYXRvbW9Nb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtidWlsZFByb3ZpZGVycyhjb25maWcsIHNjcmlwdEZhY3RvcnkpXSxcbiAgICB9O1xuICB9XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgdXNlIE1hdG9tb01vZHVsZSBpbnN0ZWFkXG4gKiBAYnJlYWtpbmctY2hhbmdlIDcuMC4wXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtNYXRvbW9Nb2R1bGVdLFxuICBleHBvcnRzOiBbTWF0b21vTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgTmd4TWF0b21vTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoXG4gICAgY29uZmlnOiBNYXRvbW9Db25maWd1cmF0aW9uLFxuICAgIHNjcmlwdEZhY3Rvcnk/OiBNYXRvbW9TY3JpcHRGYWN0b3J5LFxuICApOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE5neE1hdG9tb01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4TWF0b21vTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbYnVpbGRQcm92aWRlcnMoY29uZmlnLCBzY3JpcHRGYWN0b3J5KV0sXG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIEBkZXByZWNhdGVkIHVzZSBNYXRvbW9Nb2R1bGUgaW5zdGVhZFxuICogQGJyZWFraW5nLWNoYW5nZSA3LjAuMFxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbTmd4TWF0b21vTW9kdWxlXSxcbiAgZXhwb3J0czogW05neE1hdG9tb01vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIE5neE1hdG9tb1RyYWNrZXJNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChcbiAgICBjb25maWc6IE1hdG9tb0NvbmZpZ3VyYXRpb24sXG4gICAgc2NyaXB0RmFjdG9yeT86IE1hdG9tb1NjcmlwdEZhY3RvcnksXG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Tmd4TWF0b21vVHJhY2tlck1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4TWF0b21vVHJhY2tlck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW2J1aWxkUHJvdmlkZXJzKGNvbmZpZywgc2NyaXB0RmFjdG9yeSldLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==