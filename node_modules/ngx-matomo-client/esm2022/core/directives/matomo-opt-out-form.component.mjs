import { Component, Inject, Input, LOCALE_ID, Optional, SecurityContext, } from '@angular/core';
import { ASYNC_INTERNAL_MATOMO_CONFIGURATION, getTrackersConfiguration, isAutoConfigurationMode, isExplicitTrackerConfiguration, } from '../tracker/configuration';
import { coerceCssSizeBinding } from '../utils/coercion';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
const DEFAULT_BORDER = '0';
const DEFAULT_WIDTH = '600px';
const DEFAULT_HEIGHT = '200px';
const URL_PATTERN = '{SERVER}/index.php?module=CoreAdminHome&action=optOut&language={LOCALE}&backgroundColor={BG_COLOR}&fontColor={COLOR}&fontSize={FONT_SIZE}&fontFamily={FONT_FAMILY}';
function missingServerUrlError() {
    return new Error(`It is required to set [serverUrl] when Matomo configuration mode is set to 'manual'`);
}
/**
 * Basic opt-out form, based on an iframe auto-generated by Matomo.
 *
 * <b>WARNING:</b> By default, this component assumes the tracker url set in MatomoConfiguration is
 * safe to be used as an iframe `src`. You have to make sure that this url is safe before using this
 * component!
 *
 * Note: This component relies on the matomo-generated opt-out form, which is deprecated
 * since Matomo version 4.12.0. It will be marked as deprecated soon.
 *
 * @see https://developer.matomo.org/changelog#new-privacy-opt-out-options
 */
export class MatomoOptOutFormComponent {
    constructor(sanitizer, config, locale = '') {
        this.sanitizer = sanitizer;
        this.config = config;
        this._defaultServerUrlInitialized = false;
        this._border = DEFAULT_BORDER;
        this._width = DEFAULT_WIDTH;
        this._height = DEFAULT_HEIGHT;
        this._iframeSrc = this.sanitizer.bypassSecurityTrustResourceUrl('');
        /** Font color (note that Matomo currently only supports hexadecimal without leading hash notation) */
        this.color = '';
        /** Background color (note that Matomo currently only supports hexadecimal without leading hash notation) */
        this.backgroundColor = '';
        this.fontSize = '';
        this.fontFamily = '';
        // Set default locale
        this.locale = locale;
    }
    get serverUrl() {
        return this._serverUrlOverride;
    }
    /**
     * Set a custom Matomo server url to be used for iframe generation
     * <br>
     * By default, tracker url is retrieved from MatomoConfiguration.
     * <br>
     * <b>WARNING:</b> This component assumes the url you provide is safe to be used as an iframe
     * `src`. You have to make sure that this url is safe before using this component!
     */
    set serverUrl(value) {
        this._serverUrlOverride = value;
    }
    get iframeSrc() {
        return this._iframeSrc;
    }
    get height() {
        return this._height;
    }
    set height(value) {
        this._height = coerceCssSizeBinding(value);
    }
    get width() {
        return this._width;
    }
    set width(value) {
        this._width = coerceCssSizeBinding(value);
    }
    get border() {
        return this._border;
    }
    set border(value) {
        this._border = coerceCssSizeBinding(value);
    }
    ngOnInit() {
        this.updateUrl();
        this.config.then(config => {
            if (isAutoConfigurationMode(config) && isExplicitTrackerConfiguration(config)) {
                this._defaultServerUrl = getTrackersConfiguration(config)[0].trackerUrl;
            }
            this._defaultServerUrlInitialized = true;
            this.updateUrl();
        });
    }
    ngOnChanges(changes) {
        if ('serverUrl' in changes ||
            'locale' in changes ||
            'color' in changes ||
            'backgroundColor' in changes ||
            'fontSize' in changes ||
            'fontFamily' in changes) {
            this.updateUrl();
        }
    }
    updateUrl() {
        let serverUrl = this._defaultServerUrl;
        if (this._serverUrlOverride) {
            serverUrl = this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, this._serverUrlOverride);
        }
        if (!serverUrl) {
            if (this._defaultServerUrlInitialized) {
                throw missingServerUrlError();
            }
            else {
                return;
            }
        }
        const url = URL_PATTERN.replace('{SERVER}', serverUrl)
            .replace('{LOCALE}', encodeURIComponent(this.locale))
            .replace('{COLOR}', encodeURIComponent(this.color))
            .replace('{BG_COLOR}', encodeURIComponent(this.backgroundColor))
            .replace('{FONT_SIZE}', encodeURIComponent(this.fontSize))
            .replace('{FONT_FAMILY}', encodeURIComponent(this.fontFamily));
        this._iframeSrc = this.sanitizer.bypassSecurityTrustResourceUrl(url);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: MatomoOptOutFormComponent, deps: [{ token: i1.DomSanitizer }, { token: ASYNC_INTERNAL_MATOMO_CONFIGURATION }, { token: LOCALE_ID, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.2", type: MatomoOptOutFormComponent, isStandalone: true, selector: "matomo-opt-out-form", inputs: { locale: "locale", color: "color", backgroundColor: "backgroundColor", fontSize: "fontSize", fontFamily: "fontFamily", serverUrl: "serverUrl", height: "height", width: "width", border: "border" }, usesOnChanges: true, ngImport: i0, template: "<iframe\n  [src]=\"iframeSrc\"\n  [style.border]=\"border\"\n  [style.height]=\"height\"\n  [style.width]=\"width\"\n></iframe>\n" }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: MatomoOptOutFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'matomo-opt-out-form', standalone: true, template: "<iframe\n  [src]=\"iframeSrc\"\n  [style.border]=\"border\"\n  [style.height]=\"height\"\n  [style.width]=\"width\"\n></iframe>\n" }]
        }], ctorParameters: () => [{ type: i1.DomSanitizer }, { type: Promise, decorators: [{
                    type: Inject,
                    args: [ASYNC_INTERNAL_MATOMO_CONFIGURATION]
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [LOCALE_ID]
                }] }], propDecorators: { locale: [{
                type: Input
            }], color: [{
                type: Input
            }], backgroundColor: [{
                type: Input
            }], fontSize: [{
                type: Input
            }], fontFamily: [{
                type: Input
            }], serverUrl: [{
                type: Input
            }], height: [{
                type: Input
            }], width: [{
                type: Input
            }], border: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,