import { ENVIRONMENT_INITIALIZER, inject } from '@angular/core';
import { ɵcreateMatomoFeature as createMatomoFeature, ɵMATOMO_ROUTER_ENABLED as MATOMO_ROUTER_ENABLED, } from 'ngx-matomo-client/core';
import { MATOMO_ROUTER_CONFIGURATION } from './configuration';
import { provideInterceptor, provideInterceptors, } from './interceptor';
import { MATOMO_ROUTE_DATA_KEY, MatomoRouteDataInterceptor, } from './interceptors/route-data-interceptor';
import { MatomoRouter } from './matomo-router.service';
/** Enable automatic page views tracking */
export function withRouter(config) {
    const providers = [
        { provide: MATOMO_ROUTER_ENABLED, useValue: true },
        { provide: MATOMO_ROUTER_CONFIGURATION, useValue: config },
        {
            provide: ENVIRONMENT_INITIALIZER,
            multi: true,
            useValue() {
                inject(MatomoRouter).initialize();
            },
        },
    ];
    return createMatomoFeature("Router" /* RouterMatomoFeatureKind.Router */, providers);
}
/** Add some matomo router interceptors */
export function withRouterInterceptors(interceptors) {
    return createMatomoFeature("RouterInterceptors" /* RouterMatomoFeatureKind.RouterInterceptors */, provideInterceptors(interceptors), featuresKind => {
        if (!featuresKind.includes("Router" /* RouterMatomoFeatureKind.Router */)) {
            throw new Error(`Matomo feature withRouterInterceptors() cannot be used without router feature! Did you forget to call withRouter()?`);
        }
    });
}
/**
 * Enable retrieval of tracking information from route data
 *
 * @see MatomoRouteData
 * @param key A custom key to get lookup route data - default is 'matomo'
 */
export function withRouteData(key) {
    const providers = [provideInterceptor(MatomoRouteDataInterceptor)];
    if (key) {
        providers.push({ provide: MATOMO_ROUTE_DATA_KEY, useValue: key });
    }
    return createMatomoFeature("BuiltInRouteDataInterceptor" /* RouterMatomoFeatureKind.BuiltInRouteDataInterceptor */, providers, featuresKind => {
        if (!featuresKind.includes("Router" /* RouterMatomoFeatureKind.Router */)) {
            throw new Error(`Matomo feature withRouteData() cannot be used without router feature! Did you forget to call withRouter()?`);
        }
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LW1hdG9tby1jbGllbnQvcm91dGVyL3Byb3ZpZGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxFQUFrQixNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBRUwsb0JBQW9CLElBQUksbUJBQW1CLEVBQzNDLHNCQUFzQixJQUFJLHFCQUFxQixHQUNoRCxNQUFNLHdCQUF3QixDQUFDO0FBQ2hDLE9BQU8sRUFBRSwyQkFBMkIsRUFBNkIsTUFBTSxpQkFBaUIsQ0FBQztBQUN6RixPQUFPLEVBR0wsa0JBQWtCLEVBQ2xCLG1CQUFtQixHQUNwQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQ0wscUJBQXFCLEVBQ3JCLDBCQUEwQixHQUMzQixNQUFNLHVDQUF1QyxDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQWN2RCwyQ0FBMkM7QUFDM0MsTUFBTSxVQUFVLFVBQVUsQ0FBQyxNQUFrQztJQUMzRCxNQUFNLFNBQVMsR0FBRztRQUNoQixFQUFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFO1FBQ2xELEVBQUUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7UUFDMUQ7WUFDRSxPQUFPLEVBQUUsdUJBQXVCO1lBQ2hDLEtBQUssRUFBRSxJQUFJO1lBQ1gsUUFBUTtnQkFDTixNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDcEMsQ0FBQztTQUNGO0tBQ0YsQ0FBQztJQUVGLE9BQU8sbUJBQW1CLGdEQUFpQyxTQUFTLENBQUMsQ0FBQztBQUN4RSxDQUFDO0FBRUQsMENBQTBDO0FBQzFDLE1BQU0sVUFBVSxzQkFBc0IsQ0FDcEMsWUFBMkU7SUFFM0UsT0FBTyxtQkFBbUIsd0VBRXhCLG1CQUFtQixDQUFDLFlBQVksQ0FBQyxFQUNqQyxZQUFZLENBQUMsRUFBRTtRQUNiLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSwrQ0FBZ0MsRUFBRTtZQUMxRCxNQUFNLElBQUksS0FBSyxDQUNiLHFIQUFxSCxDQUN0SCxDQUFDO1NBQ0g7SUFDSCxDQUFDLENBQ0YsQ0FBQztBQUNKLENBQUM7QUFFRDs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQUMsR0FBWTtJQUN4QyxNQUFNLFNBQVMsR0FBZSxDQUFDLGtCQUFrQixDQUFDLDBCQUEwQixDQUFDLENBQUMsQ0FBQztJQUUvRSxJQUFJLEdBQUcsRUFBRTtRQUNQLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7S0FDbkU7SUFFRCxPQUFPLG1CQUFtQiwwRkFFeEIsU0FBUyxFQUNULFlBQVksQ0FBQyxFQUFFO1FBQ2IsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLCtDQUFnQyxFQUFFO1lBQzFELE1BQU0sSUFBSSxLQUFLLENBQ2IsNEdBQTRHLENBQzdHLENBQUM7U0FDSDtJQUNILENBQUMsQ0FDRixDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVOVklST05NRU5UX0lOSVRJQUxJWkVSLCBpbmplY3QsIFByb3ZpZGVyLCBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBNYXRvbW9GZWF0dXJlIGFzIE1hdG9tb0ZlYXR1cmUsXG4gIMm1Y3JlYXRlTWF0b21vRmVhdHVyZSBhcyBjcmVhdGVNYXRvbW9GZWF0dXJlLFxuICDJtU1BVE9NT19ST1VURVJfRU5BQkxFRCBhcyBNQVRPTU9fUk9VVEVSX0VOQUJMRUQsXG59IGZyb20gJ25neC1tYXRvbW8tY2xpZW50L2NvcmUnO1xuaW1wb3J0IHsgTUFUT01PX1JPVVRFUl9DT05GSUdVUkFUSU9OLCBNYXRvbW9Sb3V0ZXJDb25maWd1cmF0aW9uIH0gZnJvbSAnLi9jb25maWd1cmF0aW9uJztcbmltcG9ydCB7XG4gIE1hdG9tb1JvdXRlckludGVyY2VwdG9yLFxuICBNYXRvbW9Sb3V0ZXJJbnRlcmNlcHRvckZuLFxuICBwcm92aWRlSW50ZXJjZXB0b3IsXG4gIHByb3ZpZGVJbnRlcmNlcHRvcnMsXG59IGZyb20gJy4vaW50ZXJjZXB0b3InO1xuaW1wb3J0IHtcbiAgTUFUT01PX1JPVVRFX0RBVEFfS0VZLFxuICBNYXRvbW9Sb3V0ZURhdGFJbnRlcmNlcHRvcixcbn0gZnJvbSAnLi9pbnRlcmNlcHRvcnMvcm91dGUtZGF0YS1pbnRlcmNlcHRvcic7XG5pbXBvcnQgeyBNYXRvbW9Sb3V0ZXIgfSBmcm9tICcuL21hdG9tby1yb3V0ZXIuc2VydmljZSc7XG5cbi8qKlxuICogQWRkaXRpb25hbCBNYXRvbW8gcm91dGVyIGZlYXR1cmVzIGtpbmRcbiAqL1xuZXhwb3J0IGNvbnN0IGVudW0gUm91dGVyTWF0b21vRmVhdHVyZUtpbmQge1xuICAvKiogQHNlZSB3aXRoUm91dGVyICovXG4gIFJvdXRlciA9ICdSb3V0ZXInLFxuICAvKiogQHNlZSB3aXRoUm91dGVySW50ZXJjZXB0b3JzICovXG4gIFJvdXRlckludGVyY2VwdG9ycyA9ICdSb3V0ZXJJbnRlcmNlcHRvcnMnLFxuICAvKiogQHNlZSB3aXRoUm91dGVEYXRhICovXG4gIEJ1aWx0SW5Sb3V0ZURhdGFJbnRlcmNlcHRvciA9ICdCdWlsdEluUm91dGVEYXRhSW50ZXJjZXB0b3InLFxufVxuXG4vKiogRW5hYmxlIGF1dG9tYXRpYyBwYWdlIHZpZXdzIHRyYWNraW5nICovXG5leHBvcnQgZnVuY3Rpb24gd2l0aFJvdXRlcihjb25maWc/OiBNYXRvbW9Sb3V0ZXJDb25maWd1cmF0aW9uKTogTWF0b21vRmVhdHVyZSB7XG4gIGNvbnN0IHByb3ZpZGVycyA9IFtcbiAgICB7IHByb3ZpZGU6IE1BVE9NT19ST1VURVJfRU5BQkxFRCwgdXNlVmFsdWU6IHRydWUgfSxcbiAgICB7IHByb3ZpZGU6IE1BVE9NT19ST1VURVJfQ09ORklHVVJBVElPTiwgdXNlVmFsdWU6IGNvbmZpZyB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEVOVklST05NRU5UX0lOSVRJQUxJWkVSLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgICB1c2VWYWx1ZSgpIHtcbiAgICAgICAgaW5qZWN0KE1hdG9tb1JvdXRlcikuaW5pdGlhbGl6ZSgpO1xuICAgICAgfSxcbiAgICB9LFxuICBdO1xuXG4gIHJldHVybiBjcmVhdGVNYXRvbW9GZWF0dXJlKFJvdXRlck1hdG9tb0ZlYXR1cmVLaW5kLlJvdXRlciwgcHJvdmlkZXJzKTtcbn1cblxuLyoqIEFkZCBzb21lIG1hdG9tbyByb3V0ZXIgaW50ZXJjZXB0b3JzICovXG5leHBvcnQgZnVuY3Rpb24gd2l0aFJvdXRlckludGVyY2VwdG9ycyhcbiAgaW50ZXJjZXB0b3JzOiAoVHlwZTxNYXRvbW9Sb3V0ZXJJbnRlcmNlcHRvcj4gfCBNYXRvbW9Sb3V0ZXJJbnRlcmNlcHRvckZuKVtdLFxuKTogTWF0b21vRmVhdHVyZSB7XG4gIHJldHVybiBjcmVhdGVNYXRvbW9GZWF0dXJlKFxuICAgIFJvdXRlck1hdG9tb0ZlYXR1cmVLaW5kLlJvdXRlckludGVyY2VwdG9ycyxcbiAgICBwcm92aWRlSW50ZXJjZXB0b3JzKGludGVyY2VwdG9ycyksXG4gICAgZmVhdHVyZXNLaW5kID0+IHtcbiAgICAgIGlmICghZmVhdHVyZXNLaW5kLmluY2x1ZGVzKFJvdXRlck1hdG9tb0ZlYXR1cmVLaW5kLlJvdXRlcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgIGBNYXRvbW8gZmVhdHVyZSB3aXRoUm91dGVySW50ZXJjZXB0b3JzKCkgY2Fubm90IGJlIHVzZWQgd2l0aG91dCByb3V0ZXIgZmVhdHVyZSEgRGlkIHlvdSBmb3JnZXQgdG8gY2FsbCB3aXRoUm91dGVyKCk/YCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9LFxuICApO1xufVxuXG4vKipcbiAqIEVuYWJsZSByZXRyaWV2YWwgb2YgdHJhY2tpbmcgaW5mb3JtYXRpb24gZnJvbSByb3V0ZSBkYXRhXG4gKlxuICogQHNlZSBNYXRvbW9Sb3V0ZURhdGFcbiAqIEBwYXJhbSBrZXkgQSBjdXN0b20ga2V5IHRvIGdldCBsb29rdXAgcm91dGUgZGF0YSAtIGRlZmF1bHQgaXMgJ21hdG9tbydcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdpdGhSb3V0ZURhdGEoa2V5Pzogc3RyaW5nKTogTWF0b21vRmVhdHVyZSB7XG4gIGNvbnN0IHByb3ZpZGVyczogUHJvdmlkZXJbXSA9IFtwcm92aWRlSW50ZXJjZXB0b3IoTWF0b21vUm91dGVEYXRhSW50ZXJjZXB0b3IpXTtcblxuICBpZiAoa2V5KSB7XG4gICAgcHJvdmlkZXJzLnB1c2goeyBwcm92aWRlOiBNQVRPTU9fUk9VVEVfREFUQV9LRVksIHVzZVZhbHVlOiBrZXkgfSk7XG4gIH1cblxuICByZXR1cm4gY3JlYXRlTWF0b21vRmVhdHVyZShcbiAgICBSb3V0ZXJNYXRvbW9GZWF0dXJlS2luZC5CdWlsdEluUm91dGVEYXRhSW50ZXJjZXB0b3IsXG4gICAgcHJvdmlkZXJzLFxuICAgIGZlYXR1cmVzS2luZCA9PiB7XG4gICAgICBpZiAoIWZlYXR1cmVzS2luZC5pbmNsdWRlcyhSb3V0ZXJNYXRvbW9GZWF0dXJlS2luZC5Sb3V0ZXIpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgTWF0b21vIGZlYXR1cmUgd2l0aFJvdXRlRGF0YSgpIGNhbm5vdCBiZSB1c2VkIHdpdGhvdXQgcm91dGVyIGZlYXR1cmUhIERpZCB5b3UgZm9yZ2V0IHRvIGNhbGwgd2l0aFJvdXRlcigpP2AsXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSxcbiAgKTtcbn1cbiJdfQ==