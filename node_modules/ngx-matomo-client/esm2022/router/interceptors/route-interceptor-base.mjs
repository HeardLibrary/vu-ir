import { inject } from '@angular/core';
import { PRIMARY_OUTLET, Router } from '@angular/router';
import { getLeafRoute } from './route-utils';
/**
 * Simple interceptor base looking into route's data for tracking
 *
 * @see MatomoRouteDataInterceptor
 */
export class MatomoRouteInterceptorBase {
    constructor() {
        this.router = inject(Router);
    }
    beforePageTrack(event) {
        const route = this.getRoute(event);
        const data = this.extractRouteData(route);
        return this.processRouteData(data);
    }
    getRoute(_) {
        return getLeafRoute(this.router.routerState.snapshot.root, PRIMARY_OUTLET);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtaW50ZXJjZXB0b3ItYmFzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1tYXRvbW8tY2xpZW50L3JvdXRlci9pbnRlcmNlcHRvcnMvcm91dGUtaW50ZXJjZXB0b3ItYmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZDLE9BQU8sRUFBeUMsY0FBYyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBR2hHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFN0M7Ozs7R0FJRztBQUNILE1BQU0sT0FBZ0IsMEJBQTBCO0lBQWhEO1FBQ3FCLFdBQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFnQjdDLENBQUM7SUFkQyxlQUFlLENBQUMsS0FBb0I7UUFDbEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFMUMsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVTLFFBQVEsQ0FBQyxDQUFnQjtRQUNqQyxPQUFPLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQzdFLENBQUM7Q0FLRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgTmF2aWdhdGlvbkVuZCwgUFJJTUFSWV9PVVRMRVQsIFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBNYXRvbW9Sb3V0ZXJJbnRlcmNlcHRvciB9IGZyb20gJy4uL2ludGVyY2VwdG9yJztcbmltcG9ydCB7IGdldExlYWZSb3V0ZSB9IGZyb20gJy4vcm91dGUtdXRpbHMnO1xuXG4vKipcbiAqIFNpbXBsZSBpbnRlcmNlcHRvciBiYXNlIGxvb2tpbmcgaW50byByb3V0ZSdzIGRhdGEgZm9yIHRyYWNraW5nXG4gKlxuICogQHNlZSBNYXRvbW9Sb3V0ZURhdGFJbnRlcmNlcHRvclxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTWF0b21vUm91dGVJbnRlcmNlcHRvckJhc2U8RD4gaW1wbGVtZW50cyBNYXRvbW9Sb3V0ZXJJbnRlcmNlcHRvciB7XG4gIHByb3RlY3RlZCByZWFkb25seSByb3V0ZXIgPSBpbmplY3QoUm91dGVyKTtcblxuICBiZWZvcmVQYWdlVHJhY2soZXZlbnQ6IE5hdmlnYXRpb25FbmQpOiBPYnNlcnZhYmxlPHZvaWQ+IHwgUHJvbWlzZTx2b2lkPiB8IHZvaWQge1xuICAgIGNvbnN0IHJvdXRlID0gdGhpcy5nZXRSb3V0ZShldmVudCk7XG4gICAgY29uc3QgZGF0YSA9IHRoaXMuZXh0cmFjdFJvdXRlRGF0YShyb3V0ZSk7XG5cbiAgICByZXR1cm4gdGhpcy5wcm9jZXNzUm91dGVEYXRhKGRhdGEpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGdldFJvdXRlKF86IE5hdmlnYXRpb25FbmQpOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90IHtcbiAgICByZXR1cm4gZ2V0TGVhZlJvdXRlKHRoaXMucm91dGVyLnJvdXRlclN0YXRlLnNuYXBzaG90LnJvb3QsIFBSSU1BUllfT1VUTEVUKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBhYnN0cmFjdCBleHRyYWN0Um91dGVEYXRhKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogRDtcblxuICBwcm90ZWN0ZWQgYWJzdHJhY3QgcHJvY2Vzc1JvdXRlRGF0YShkYXRhOiBEKTogT2JzZXJ2YWJsZTx2b2lkPiB8IFByb21pc2U8dm9pZD4gfCB2b2lkO1xufVxuIl19