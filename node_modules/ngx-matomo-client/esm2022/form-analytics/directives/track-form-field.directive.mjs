import { booleanAttribute, Directive, ElementRef, inject, Input, } from '@angular/core';
import { throwFormNotFoundError } from './errors';
import { TrackFormDirective } from './track-form.directive';
import * as i0 from "@angular/core";
export class TrackFormFieldDirective {
    constructor() {
        this.elementRef = inject(ElementRef);
        this.form = inject(TrackFormDirective, { optional: true }) ??
            throwFormNotFoundError('[matomoTrackFormField]');
        this.initialized = false;
    }
    set matomoIgnore(ignore) {
        if (ignore) {
            this.elementRef.nativeElement.setAttribute('data-matomo-ignore', '');
        }
        else {
            this.elementRef.nativeElement.removeAttribute('data-matomo-ignore');
        }
    }
    set matomoTrackFormField(name) {
        if (name) {
            this.elementRef.nativeElement.setAttribute('data-matomo-name', name);
        }
        else {
            this.elementRef.nativeElement.removeAttribute('data-matomo-name');
        }
        if (this.initialized) {
            this.track();
        }
    }
    ngAfterViewInit() {
        this.track();
        this.initialized = true;
    }
    track() {
        this.form.track();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: TrackFormFieldDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "16.1.0", version: "17.3.2", type: TrackFormFieldDirective, isStandalone: true, selector: "[matomoTrackFormField]", inputs: { matomoIgnore: ["matomoIgnore", "matomoIgnore", booleanAttribute], matomoTrackFormField: "matomoTrackFormField" }, exportAs: ["matomoTrackFormField"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: TrackFormFieldDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[matomoTrackFormField]',
                    standalone: true,
                    exportAs: 'matomoTrackFormField',
                }]
        }], propDecorators: { matomoIgnore: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], matomoTrackFormField: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhY2stZm9ybS1maWVsZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbWF0b21vLWNsaWVudC9mb3JtLWFuYWx5dGljcy9kaXJlY3RpdmVzL3RyYWNrLWZvcm0tZmllbGQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxnQkFBZ0IsRUFDaEIsU0FBUyxFQUNULFVBQVUsRUFDVixNQUFNLEVBQ04sS0FBSyxHQUNOLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7QUFPNUQsTUFBTSxPQUFPLHVCQUF1QjtJQUxwQztRQU1tQixlQUFVLEdBQXdCLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNyRCxTQUFJLEdBQ25CLE1BQU0sQ0FBQyxrQkFBa0IsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztZQUM5QyxzQkFBc0IsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBRTNDLGdCQUFXLEdBQUcsS0FBSyxDQUFDO0tBOEI3QjtJQTVCQyxJQUE0QyxZQUFZLENBQUMsTUFBZTtRQUN0RSxJQUFJLE1BQU0sRUFBRTtZQUNWLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUN0RTthQUFNO1lBQ0wsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLG9CQUFvQixDQUFDLENBQUM7U0FDckU7SUFDSCxDQUFDO0lBRUQsSUFBYSxvQkFBb0IsQ0FBQyxJQUErQjtRQUMvRCxJQUFJLElBQUksRUFBRTtZQUNSLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxrQkFBa0IsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUN0RTthQUFNO1lBQ0wsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLGtCQUFrQixDQUFDLENBQUM7U0FDbkU7UUFFRCxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQ2Q7SUFDSCxDQUFDO0lBRUQsZUFBZTtRQUNiLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNiLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO0lBQzFCLENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNwQixDQUFDOzhHQW5DVSx1QkFBdUI7a0dBQXZCLHVCQUF1QixtSEFRZCxnQkFBZ0I7OzJGQVJ6Qix1QkFBdUI7a0JBTG5DLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFFBQVEsRUFBRSxzQkFBc0I7aUJBQ2pDOzhCQVM2QyxZQUFZO3NCQUF2RCxLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFO2dCQVF6QixvQkFBb0I7c0JBQWhDLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlclZpZXdJbml0LFxuICBib29sZWFuQXR0cmlidXRlLFxuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIGluamVjdCxcbiAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgdGhyb3dGb3JtTm90Rm91bmRFcnJvciB9IGZyb20gJy4vZXJyb3JzJztcbmltcG9ydCB7IFRyYWNrRm9ybURpcmVjdGl2ZSB9IGZyb20gJy4vdHJhY2stZm9ybS5kaXJlY3RpdmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbWF0b21vVHJhY2tGb3JtRmllbGRdJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgZXhwb3J0QXM6ICdtYXRvbW9UcmFja0Zvcm1GaWVsZCcsXG59KVxuZXhwb3J0IGNsYXNzIFRyYWNrRm9ybUZpZWxkRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIHByaXZhdGUgcmVhZG9ubHkgZWxlbWVudFJlZjogRWxlbWVudFJlZjxFbGVtZW50PiA9IGluamVjdChFbGVtZW50UmVmKTtcbiAgcHJpdmF0ZSByZWFkb25seSBmb3JtID1cbiAgICBpbmplY3QoVHJhY2tGb3JtRGlyZWN0aXZlLCB7IG9wdGlvbmFsOiB0cnVlIH0pID8/XG4gICAgdGhyb3dGb3JtTm90Rm91bmRFcnJvcignW21hdG9tb1RyYWNrRm9ybUZpZWxkXScpO1xuXG4gIHByaXZhdGUgaW5pdGlhbGl6ZWQgPSBmYWxzZTtcblxuICBASW5wdXQoeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSkgc2V0IG1hdG9tb0lnbm9yZShpZ25vcmU6IGJvb2xlYW4pIHtcbiAgICBpZiAoaWdub3JlKSB7XG4gICAgICB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbWF0b21vLWlnbm9yZScsICcnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdkYXRhLW1hdG9tby1pZ25vcmUnKTtcbiAgICB9XG4gIH1cblxuICBASW5wdXQoKSBzZXQgbWF0b21vVHJhY2tGb3JtRmllbGQobmFtZTogc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZCkge1xuICAgIGlmIChuYW1lKSB7XG4gICAgICB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbWF0b21vLW5hbWUnLCBuYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdkYXRhLW1hdG9tby1uYW1lJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaW5pdGlhbGl6ZWQpIHtcbiAgICAgIHRoaXMudHJhY2soKTtcbiAgICB9XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy50cmFjaygpO1xuICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICB9XG5cbiAgdHJhY2soKTogdm9pZCB7XG4gICAgdGhpcy5mb3JtLnRyYWNrKCk7XG4gIH1cbn1cbiJdfQ==